{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azu-eus2-dev-datafactory"
		},
		"blob_storage_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blob_storage_ls'"
		},
		"ADF_SQL_pl_properties_0_name": {
			"type": "string",
			"defaultValue": "EnumerateContainersList"
		},
		"ADF_SQL_pl_properties_1_name": {
			"type": "string",
			"defaultValue": "ForEachContainer"
		},
		"ADF_SQL_pl_properties_2_name": {
			"type": "string",
			"defaultValue": "Validation_File"
		},
		"ADF_SQL_pl_properties_3_name": {
			"type": "string",
			"defaultValue": "Wait 1 sec"
		},
		"ADF_SQL_pl_properties_3_typeProperties": {
			"type": "number"
		},
		"AzureBlobStorageSinkFileStore_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureBlobStorageSinkFileStore_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder"
		},
		"AzureBlobStorageSourceFileStore_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder"
		},
		"AzureKeyVault_ls_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azu-caes-dev-keyvault.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADF_SQL_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy all files across multiple containers or buckets from one file-based storage store to another",
				"activities": [
					{
						"name": "[parameters('ADF_SQL_pl_properties_0_name')]",
						"description": "Scan the file path on your source storage store and get the container list.",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Validation_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlobStorageSourceFileStore",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.SourceFilePath",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "[parameters('ADF_SQL_pl_properties_1_name')]",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "EnumerateContainersList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('EnumerateContainersList').output.childItems",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "CopyOneContainer",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@concat(pipeline().parameters.SourceFilePath,'/',item().name)"
										},
										{
											"name": "Destination",
											"value": "@concat(pipeline().parameters.DestinationFilePath,'/',item().name)"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink",
											"copyBehavior": "PreserveHierarchy"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "AzureBlobStorageSourceFileStore",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat(pipeline().parameters.SourceFilePath,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlobStorageSinkFileStore",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat(pipeline().parameters.DestinationFilePath,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "[parameters('ADF_SQL_pl_properties_2_name')]",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlobStorageSourceFileStore",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.SourceFilePath",
										"type": "Expression"
									}
								}
							},
							"timeout": "7.00:00:00",
							"sleep": 10
						}
					},
					{
						"name": "[parameters('ADF_SQL_pl_properties_3_name')]",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ForEachContainer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": "[parameters('ADF_SQL_pl_properties_3_typeProperties')]"
						}
					}
				],
				"parameters": {
					"SourceFilePath": {
						"type": "String",
						"defaultValue": "/storesales-source"
					},
					"DestinationFilePath": {
						"type": "String",
						"defaultValue": "/storesales-staging"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlobStorageSourceFileStore')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobStorageSinkFileStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageSinkFileStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "blob_storage_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "[parameters('AzureBlobStorageSinkFileStore_properties_typeProperties_fileName')]",
					"folderPath": {
						"value": "[parameters('AzureBlobStorageSinkFileStore_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blob_storage_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageSourceFileStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "blob_storage_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": {
						"value": "[parameters('AzureBlobStorageSourceFileStore_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blob_storage_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_ls_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_storage_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blob_storage_ls_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_ls",
							"type": "LinkedServiceReference"
						},
						"secretName": "blob-storage-key"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_ls')]"
			]
		}
	]
}